=begin
#My Data My Consent - Developer API

#Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

The version of the OpenAPI document: 1.0
Contact: support@mydatamyconsent.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.2.0

=end

require 'date'
require 'time'

module MyDataMyConsent
  class FinancialAccountSubCategoryType
    EPF = "Epf".freeze
    PPF = "Ppf".freeze
    DEPOSIT = "Deposit".freeze
    RECURRING_DEPOSIT = "RecurringDeposit".freeze
    TERM_DEPOSIT = "TermDeposit".freeze
    SAVINGS_ACCOUNT = "SavingsAccount".freeze
    ULIP = "Ulip".freeze
    LIFE_INSURANCE = "LifeInsurance".freeze
    TERM_INSURANCE = "TermInsurance".freeze
    GENERAL_INSURANCE = "GeneralInsurance".freeze
    HOME_LOAN = "HomeLoan".freeze
    STUDENT_LOAN = "StudentLoan".freeze
    SECURED_CREDIT_CARD = "SecuredCreditCard".freeze
    UNSECURED_CREDIT_CARD = "UnsecuredCreditCard".freeze
    AIF = "Aif".freeze
    BOND = "Bond".freeze
    CD = "Cd".freeze
    CIS = "Cis".freeze
    CP = "Cp".freeze
    DEBENTURE = "Debenture".freeze
    EQUITY = "Equity".freeze
    ETF = "Etf".freeze
    GOVT_SECURITY = "GovtSecurity".freeze
    IDR = "Idr".freeze
    INVIT = "Invit".freeze
    MUTUAL_FUND = "MutualFund".freeze
    NPS = "Nps".freeze
    REIT = "Reit".freeze
    SIP = "Sip".freeze
    BILL = "Bill".freeze
    REWARD = "Reward".freeze

    def self.all_vars
      @all_vars ||= [EPF, PPF, DEPOSIT, RECURRING_DEPOSIT, TERM_DEPOSIT, SAVINGS_ACCOUNT, ULIP, LIFE_INSURANCE, TERM_INSURANCE, GENERAL_INSURANCE, HOME_LOAN, STUDENT_LOAN, SECURED_CREDIT_CARD, UNSECURED_CREDIT_CARD, AIF, BOND, CD, CIS, CP, DEBENTURE, EQUITY, ETF, GOVT_SECURITY, IDR, INVIT, MUTUAL_FUND, NPS, REIT, SIP, BILL, REWARD].freeze
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      return value if FinancialAccountSubCategoryType.all_vars.include?(value)
      raise "Invalid ENUM value #{value} for class #FinancialAccountSubCategoryType"
    end
  end
end
