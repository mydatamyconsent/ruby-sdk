=begin
#My Data My Consent - Developer API

#Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

The version of the OpenAPI document: v1
Contact: support@mydatamyconsent.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DataConsentRequestsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DataConsentRequestsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DataConsentRequestsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DataConsentRequestsApi' do
    it 'should create an instance of DataConsentRequestsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DataConsentRequestsApi)
    end
  end

  # unit tests for cancel_consent_request
  # Cancel a Consent Request by ID.
  # .
  # @param request_id consent request id.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'cancel_consent_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_request
  # Create a consent request.
  # @param [Hash] opts the optional parameters
  # @option opts [DataConsentRequestModel] :data_consent_request_model MyDataMyConsent.Models.Consents.DataConsentRequestModel.
  # @return [DataConsent]
  describe 'create_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_consent_requests
  # Get all Consent Requests.
  # @param [Hash] opts the optional parameters
  # @option opts [DataConsentStatus] :status 
  # @return [Object]
  describe 'get_all_consent_requests test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_consent_request_by_id
  # Get a Consent Request by ID.
  # @param request_id 
  # @param [Hash] opts the optional parameters
  # @return [DataConsentDetailsDto]
  describe 'get_consent_request_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
