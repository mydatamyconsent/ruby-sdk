=begin
#My Data My Consent - Developer API

#Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

The version of the OpenAPI document: v1
Contact: support@mydatamyconsent.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DataConsentsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DataConsentsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DataConsentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DataConsentsApi' do
    it 'should create an instance of DataConsentsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DataConsentsApi)
    end
  end

  # unit tests for v1_consents_consent_id_accounts_account_id_get
  # Get consented financial account details.
  # @param consent_id 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_accounts_account_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_accounts_account_id_insights_get
  # Get consented financial account insights.
  # @param consent_id 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_accounts_account_id_insights_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_accounts_account_id_transactions_get
  # Get consented financial account transactions.
  # @param consent_id 
  # @param account_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filters 
  # @option opts [Time] :from_date 
  # @option opts [Time] :to_date 
  # @return [Object]
  describe 'v1_consents_consent_id_accounts_account_id_transactions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_accounts_get
  # Get all accounts in a consent.
  # @param consent_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_accounts_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_documents_document_id_analysis_get
  # Get analysis of a consented document.
  # @param consent_id 
  # @param document_id Document Id.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_documents_document_id_analysis_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_documents_document_id_download_get
  # Download a consented document.
  # @param consent_id 
  # @param document_id Document Id.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_documents_document_id_download_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_documents_document_id_get
  # Get consented document details.
  # @param consent_id 
  # @param document_id Document Id.
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_documents_document_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_documents_get
  # Get all documents in a consent.
  # @param consent_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_consent_id_get
  # Get consent details by consent id.
  # @param consent_id 
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'v1_consents_consent_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_consents_get
  # Get all consents filtered by status and time.
  # @param [Hash] opts the optional parameters
  # @option opts [DataConsentStatus] :status MyDataMyConsent.Domain.Entities.ConsentAggregate.Enums.DataConsentStatus.
  # @option opts [Time] :start_date System.DateTime.
  # @option opts [Time] :end_date till dateSystem.DateTime.
  # @return [Object]
  describe 'v1_consents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
