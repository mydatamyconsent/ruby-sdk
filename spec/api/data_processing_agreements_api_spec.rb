=begin
#My Data My Consent - Developer API

#Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.

The version of the OpenAPI document: v1
Contact: support@mydatamyconsent.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DataProcessingAgreementsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DataProcessingAgreementsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DataProcessingAgreementsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DataProcessingAgreementsApi' do
    it 'should create an instance of DataProcessingAgreementsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DataProcessingAgreementsApi)
    end
  end

  # unit tests for v1_data_agreements_get
  # Get all data processing agreements.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_no Page number.
  # @option opts [Integer] :page_size Number of items to return.
  # @return [DataProcessingAgreementPaginatedList]
  describe 'v1_data_agreements_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_data_agreements_id_delete
  # Delete a data processing agreement. This will not delete a published or a agreement in use with consents.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_data_agreements_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_data_agreements_id_get
  # Get data processing agreement by Id.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [DataProcessingAgreement]
  describe 'v1_data_agreements_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_data_agreements_id_put
  # Update a data processing agreement.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [DataProcessingAgreement] :data_processing_agreement 
  # @return [DataProcessingAgreement]
  describe 'v1_data_agreements_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_data_agreements_id_terminate_put
  # Terminate a data processing agreement.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_data_agreements_id_terminate_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_data_agreements_post
  # Create a data processing agreement.
  # @param [Hash] opts the optional parameters
  # @option opts [DataProcessingAgreement] :data_processing_agreement 
  # @return [DataProcessingAgreement]
  describe 'v1_data_agreements_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
